프로그램 실행과정
	
	프로그램 -> 전처리기 -> 컴파일러 -> 어셈블러 -> 링커

	전처리기에 의한 치환작업
		- #으로 시작하는 지시자(#include #define)
	컴파일러에 의한 번역
		- CPU의 명령어로 번역(언어가 명령어(ADD)로 해석)
	어셈블러에 의한 바이너리 코드 생성
		- CPU의 명령어를 바이너리 코드로 번역(0011를 ADD로 번역)
	링커에 의한 연결과 결합
		- 라이브러리와의 결합

	ADD 0011
	MIN 0010
	MUL 0100
	DIV 0101

	Stored Program Concept
	(폰노이만 아키텍쳐)
	Fetch
		- CPU 내부로 명령어 이동(명령어를 하나씩 CPU로 가져감)
	Decode
		- 명령어 해석(가져간 명령어를 해석함)
		- 컨트롤 유닛
	Execution
		- 연산을 진행(해석한 명령어를 통해 연산함.)
		- 보통을 ALU를 생각(ALU가 중심이되어서 연산)

	Stored Program Concept + 컴퓨터 구조
		- StoredProgramConcept를 기반으로 컴퓨터 구조를 연결시켜 생각해보기.

	데이터 이동의 기반 버스 시스템(양방향)
		- 데이터 버스
			데이터 이동
		- 어드레스 버스(프로토콜에 따라 다름.(규약))
			주소 이동
		- 컨트롤 버스(누가 먼저 보낼지)
			컨트롤 신호 이동
